# Test file

Parse(strings/ParseJson) OUT -> IN Wrapper(teaser/ScoreStepWrapper)
Wrapper() OUT -> IN Console(core/Output)

#### Score By Title
# ParseTitle(strings/ParseJson) OUT -> IN SplitArray(objects/SplitArray)
# SplitArray() OUT -> TITLE ScoreByTitle(teaser/ScoreByTitle)
# Wrapper() SENTENCE -> IN ScoreByTitle()
# ScoreByTitle() OUT -> SCORE Wrapper()
# '["title", "BUILT", "GOOGLE", "test"]' -> IN ParseTitle(strings/ParseJson)

#### ScoreByLength
#Wrapper() SENTENCE -> IN RelevanceByLength(teaser/RelevanceByLength)
#RelevanceByLength() OUT -> SCORE Wrapper()

#### ScoreByPosition
# '10' -> LENGTH ScoreByPosition(teaser/ScoreByPosition)
# Wrapper() POSITION -> POSITION ScoreByPosition()
# ScoreByPosition() OUT -> SCORE Wrapper()

'{"sentence": ["a", "GOOGLE", "BUILT", "by", "whitespace"], "score": 0, "position": 10 }' -> IN Parse()