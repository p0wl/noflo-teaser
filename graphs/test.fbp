# Test file

Parse(strings/ParseJson) OUT -> IN Step(teaser/Step)
Step() OUT -> IN Console(core/Output)

#### Score By Title
# ParseTitle(strings/ParseJson) OUT -> IN SplitArray(objects/SplitArray)
# SplitArray() OUT -> TITLE ScoreByTitle(teaser/ScoreByTitle)
# Step() SENTENCE -> IN ScoreByTitle()
# ScoreByTitle() OUT -> IN C(core/Output) OUT -> SCORE Step()
#'["title", "BUILT", "GOOGLE", "test"]' -> IN ParseTitle(strings/ParseJson)

#### ScoreByLength
#Step() SENTENCE -> IN RelevanceByLength(teaser/RelevanceByLength)
#RelevanceByLength() OUT -> SCORE Step()

#### ScoreByPosition
# '10' -> LENGTH ScoreByPosition(teaser/ScoreByPosition)
# Step() POSITION -> POSITION ScoreByPosition()
# ScoreByPosition() OUT -> SCORE Step()




'{"sentence": ["a", "GOOGLE", "BUILT", "by", "whitespace"], "score": 0, "position": 10 }' -> IN Parse()

### ABSTRACT WRAP / UNWRAP -> use in every score method